TranslationUnitDecl 0x400000c76368 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x400000c77210 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x400000c76930 '__int128'
|-TypedefDecl 0x400000c77280 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x400000c76950 'unsigned __int128'
|-TypedefDecl 0x400000d21a98 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x400000d21870 'struct __NSConstantString_tag'
|   `-Record 0x400000c772d8 '__NSConstantString_tag'
|-TypedefDecl 0x400000d21b00 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x400000c76af0 '__SVInt8_t'
|-TypedefDecl 0x400000d21b68 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x400000c76b10 '__SVInt16_t'
|-TypedefDecl 0x400000d21bd0 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x400000c76b30 '__SVInt32_t'
|-TypedefDecl 0x400000d21c38 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x400000c76b50 '__SVInt64_t'
|-TypedefDecl 0x400000d21ca0 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x400000c76b70 '__SVUint8_t'
|-TypedefDecl 0x400000d21d08 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x400000c76b90 '__SVUint16_t'
|-TypedefDecl 0x400000d21d70 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x400000c76bb0 '__SVUint32_t'
|-TypedefDecl 0x400000d21dd8 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x400000c76bd0 '__SVUint64_t'
|-TypedefDecl 0x400000d21e40 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x400000c76bf0 '__SVFloat16_t'
|-TypedefDecl 0x400000d21ea8 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x400000c76c10 '__SVFloat32_t'
|-TypedefDecl 0x400000d21f10 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x400000c76c30 '__SVFloat64_t'
|-TypedefDecl 0x400000d21f78 <<invalid sloc>> <invalid sloc> implicit __SVBFloat16_t '__SVBFloat16_t'
| `-BuiltinType 0x400000c76c50 '__SVBFloat16_t'
|-TypedefDecl 0x400000d21fe0 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x400000c76c70 '__clang_svint8x2_t'
|-TypedefDecl 0x400000d22048 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x400000c76c90 '__clang_svint16x2_t'
|-TypedefDecl 0x400000d220b0 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x400000c76cb0 '__clang_svint32x2_t'
|-TypedefDecl 0x400000d22118 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x400000c76cd0 '__clang_svint64x2_t'
|-TypedefDecl 0x400000d22180 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x400000c76cf0 '__clang_svuint8x2_t'
|-TypedefDecl 0x400000d221e8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x400000c76d10 '__clang_svuint16x2_t'
|-TypedefDecl 0x400000d22250 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x400000c76d30 '__clang_svuint32x2_t'
|-TypedefDecl 0x400000d222b8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x400000c76d50 '__clang_svuint64x2_t'
|-TypedefDecl 0x400000d22320 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x400000c76d70 '__clang_svfloat16x2_t'
|-TypedefDecl 0x400000d22388 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x400000c76d90 '__clang_svfloat32x2_t'
|-TypedefDecl 0x400000d223f0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x400000c76db0 '__clang_svfloat64x2_t'
|-TypedefDecl 0x400000d22458 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x400000c76dd0 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x400000d224c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x400000c76df0 '__clang_svint8x3_t'
|-TypedefDecl 0x400000d22528 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x400000c76e10 '__clang_svint16x3_t'
|-TypedefDecl 0x400000d22590 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x400000c76e30 '__clang_svint32x3_t'
|-TypedefDecl 0x400000d225f8 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x400000c76e50 '__clang_svint64x3_t'
|-TypedefDecl 0x400000d22660 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x400000c76e70 '__clang_svuint8x3_t'
|-TypedefDecl 0x400000d226c8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x400000c76e90 '__clang_svuint16x3_t'
|-TypedefDecl 0x400000d22730 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x400000c76eb0 '__clang_svuint32x3_t'
|-TypedefDecl 0x400000d22798 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x400000c76ed0 '__clang_svuint64x3_t'
|-TypedefDecl 0x400000d22800 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x400000c76ef0 '__clang_svfloat16x3_t'
|-TypedefDecl 0x400000d230a0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x400000c76f10 '__clang_svfloat32x3_t'
|-TypedefDecl 0x400000d23108 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x400000c76f30 '__clang_svfloat64x3_t'
|-TypedefDecl 0x400000d23170 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x400000c76f50 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x400000d231d8 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x400000c76f70 '__clang_svint8x4_t'
|-TypedefDecl 0x400000d23240 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x400000c76f90 '__clang_svint16x4_t'
|-TypedefDecl 0x400000d232a8 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x400000c76fb0 '__clang_svint32x4_t'
|-TypedefDecl 0x400000d23310 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x400000c76fd0 '__clang_svint64x4_t'
|-TypedefDecl 0x400000d23378 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x400000c76ff0 '__clang_svuint8x4_t'
|-TypedefDecl 0x400000d233e0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x400000c77010 '__clang_svuint16x4_t'
|-TypedefDecl 0x400000d23448 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x400000c77030 '__clang_svuint32x4_t'
|-TypedefDecl 0x400000d234b0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x400000c77050 '__clang_svuint64x4_t'
|-TypedefDecl 0x400000d23518 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x400000c77070 '__clang_svfloat16x4_t'
|-TypedefDecl 0x400000d23580 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x400000c77090 '__clang_svfloat32x4_t'
|-TypedefDecl 0x400000d235e8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x400000c770b0 '__clang_svfloat64x4_t'
|-TypedefDecl 0x400000d23650 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x400000c770d0 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x400000d236b8 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x400000c770f0 '__SVBool_t'
|-TypedefDecl 0x400000d23720 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx2_t '__clang_svboolx2_t'
| `-BuiltinType 0x400000c77110 '__clang_svboolx2_t'
|-TypedefDecl 0x400000d23788 <<invalid sloc>> <invalid sloc> implicit __clang_svboolx4_t '__clang_svboolx4_t'
| `-BuiltinType 0x400000c77130 '__clang_svboolx4_t'
|-TypedefDecl 0x400000d237f0 <<invalid sloc>> <invalid sloc> implicit __SVCount_t '__SVCount_t'
| `-BuiltinType 0x400000c77150 '__SVCount_t'
|-TypedefDecl 0x400000d23890 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x400000d23850 'char *'
|   `-BuiltinType 0x400000c76410 'char'
|-TypedefDecl 0x400000d23b88 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list'
| `-RecordType 0x400000d23970 'struct __va_list'
|   `-Record 0x400000d238e8 '__va_list'
|-FunctionDecl 0x400000d23d50 </app/compiler/tests/parser/test_simple.c:1:1, col:21> col:5 used add 'int (int, int)'
| |-ParmVarDecl 0x400000d23bf8 <col:9, col:13> col:13 a 'int'
| `-ParmVarDecl 0x400000d23c78 <col:16, col:20> col:20 b 'int'
|-FunctionDecl 0x400000d23f88 prev 0x400000d23d50 <line:3:1, line:5:1> line:3:5 used add 'int (int, int)'
| |-ParmVarDecl 0x400000d23e68 <col:9, col:13> col:13 used a 'int'
| |-ParmVarDecl 0x400000d23ee8 <col:16, col:20> col:20 used b 'int'
| `-CompoundStmt 0x400000d3ab68 <col:23, line:5:1>
|   `-ReturnStmt 0x400000d3ab58 <line:4:5, col:16>
|     `-BinaryOperator 0x400000d3ab38 <col:12, col:16> 'int' '+'
|       |-ImplicitCastExpr 0x400000d24080 <col:12> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x400000d24040 <col:12> 'int' lvalue ParmVar 0x400000d23e68 'a' 'int'
|       `-ImplicitCastExpr 0x400000d3ab20 <col:16> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x400000d24060 <col:16> 'int' lvalue ParmVar 0x400000d23ee8 'b' 'int'
`-FunctionDecl 0x400000d3abd0 <line:7:1, line:29:1> line:7:5 main 'int ()'
  `-CompoundStmt 0x400000d3b7f8 <col:12, line:29:1>
    |-DeclStmt 0x400000d3ad18 <line:8:5, col:15>
    | `-VarDecl 0x400000d3ac90 <col:5, col:13> col:9 used x 'int' cinit
    |   `-IntegerLiteral 0x400000d3acf8 <col:13> 'int' 10
    |-DeclStmt 0x400000d3add0 <line:9:5, col:14>
    | `-VarDecl 0x400000d3ad48 <col:5, col:13> col:9 used y 'int' cinit
    |   `-IntegerLiteral 0x400000d3adb0 <col:13> 'int' 5
    |-DeclStmt 0x400000d3af00 <line:10:5, col:13>
    | |-VarDecl 0x400000d3ae00 <col:5, col:9> col:9 used i 'int'
    | `-VarDecl 0x400000d3ae80 <col:5, col:12> col:12 j 'int'
    |-DeclStmt 0x400000d3afb8 <line:11:5, col:19>
    | `-VarDecl 0x400000d3af30 <col:5, col:18> col:9 used result 'int' cinit
    |   `-IntegerLiteral 0x400000d3af98 <col:18> 'int' 0
    |-IfStmt 0x400000d3b2a8 <line:13:5, line:17:5> has_else
    | |-BinaryOperator 0x400000d3b040 <line:13:9, col:13> 'int' '>'
    | | |-ImplicitCastExpr 0x400000d3b010 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x400000d3afd0 <col:9> 'int' lvalue Var 0x400000d3ac90 'x' 'int'
    | | `-ImplicitCastExpr 0x400000d3b028 <col:13> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x400000d3aff0 <col:13> 'int' lvalue Var 0x400000d3ad48 'y' 'int'
    | |-CompoundStmt 0x400000d3b1a8 <col:16, line:15:5>
    | | `-BinaryOperator 0x400000d3b188 <line:14:9, col:26> 'int' '='
    | |   |-DeclRefExpr 0x400000d3b060 <col:9> 'int' lvalue Var 0x400000d3af30 'result' 'int'
    | |   `-CallExpr 0x400000d3b120 <col:18, col:26> 'int'
    | |     |-ImplicitCastExpr 0x400000d3b108 <col:18> 'int (*)(int, int)' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x400000d3b080 <col:18> 'int (int, int)' Function 0x400000d23f88 'add' 'int (int, int)'
    | |     |-ImplicitCastExpr 0x400000d3b158 <col:22> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x400000d3b0a0 <col:22> 'int' lvalue Var 0x400000d3ac90 'x' 'int'
    | |     `-ImplicitCastExpr 0x400000d3b170 <col:25> 'int' <LValueToRValue>
    | |       `-DeclRefExpr 0x400000d3b0c0 <col:25> 'int' lvalue Var 0x400000d3ad48 'y' 'int'
    | `-CompoundStmt 0x400000d3b290 <line:15:12, line:17:5>
    |   `-BinaryOperator 0x400000d3b270 <line:16:9, col:22> 'int' '='
    |     |-DeclRefExpr 0x400000d3b1c0 <col:9> 'int' lvalue Var 0x400000d3af30 'result' 'int'
    |     `-BinaryOperator 0x400000d3b250 <col:18, col:22> 'int' '-'
    |       |-ImplicitCastExpr 0x400000d3b220 <col:18> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x400000d3b1e0 <col:18> 'int' lvalue Var 0x400000d3ac90 'x' 'int'
    |       `-ImplicitCastExpr 0x400000d3b238 <col:22> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x400000d3b200 <col:22> 'int' lvalue Var 0x400000d3ad48 'y' 'int'
    |-WhileStmt 0x400000d3b4e0 <line:19:5, line:22:5>
    | |-BinaryOperator 0x400000d3b330 <line:19:12, col:16> 'int' '>'
    | | |-ImplicitCastExpr 0x400000d3b318 <col:12> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x400000d3b2d8 <col:12> 'int' lvalue Var 0x400000d3ac90 'x' 'int'
    | | `-IntegerLiteral 0x400000d3b2f8 <col:16> 'int' 0
    | `-CompoundStmt 0x400000d3b4c0 <col:19, line:22:5>
    |   |-BinaryOperator 0x400000d3b3e8 <line:20:9, col:17> 'int' '='
    |   | |-DeclRefExpr 0x400000d3b350 <col:9> 'int' lvalue Var 0x400000d3ac90 'x' 'int'
    |   | `-BinaryOperator 0x400000d3b3c8 <col:13, col:17> 'int' '-'
    |   |   |-ImplicitCastExpr 0x400000d3b3b0 <col:13> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x400000d3b370 <col:13> 'int' lvalue Var 0x400000d3ac90 'x' 'int'
    |   |   `-IntegerLiteral 0x400000d3b390 <col:17> 'int' 1
    |   `-BinaryOperator 0x400000d3b4a0 <line:21:9, col:27> 'int' '='
    |     |-DeclRefExpr 0x400000d3b408 <col:9> 'int' lvalue Var 0x400000d3af30 'result' 'int'
    |     `-BinaryOperator 0x400000d3b480 <col:18, col:27> 'int' '+'
    |       |-ImplicitCastExpr 0x400000d3b468 <col:18> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x400000d3b428 <col:18> 'int' lvalue Var 0x400000d3af30 'result' 'int'
    |       `-IntegerLiteral 0x400000d3b448 <col:27> 'int' 1
    |-ForStmt 0x400000d3b778 <line:24:5, line:26:5>
    | |-BinaryOperator 0x400000d3b540 <line:24:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x400000d3b500 <col:10> 'int' lvalue Var 0x400000d3ae00 'i' 'int'
    | | `-IntegerLiteral 0x400000d3b520 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x400000d3b5b8 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x400000d3b5a0 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x400000d3b560 <col:17> 'int' lvalue Var 0x400000d3ae00 'i' 'int'
    | | `-IntegerLiteral 0x400000d3b580 <col:21> 'int' 3
    | |-BinaryOperator 0x400000d3b670 <col:24, col:32> 'int' '='
    | | |-DeclRefExpr 0x400000d3b5d8 <col:24> 'int' lvalue Var 0x400000d3ae00 'i' 'int'
    | | `-BinaryOperator 0x400000d3b650 <col:28, col:32> 'int' '+'
    | |   |-ImplicitCastExpr 0x400000d3b638 <col:28> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x400000d3b5f8 <col:28> 'int' lvalue Var 0x400000d3ae00 'i' 'int'
    | |   `-IntegerLiteral 0x400000d3b618 <col:32> 'int' 1
    | `-CompoundStmt 0x400000d3b760 <col:35, line:26:5>
    |   `-BinaryOperator 0x400000d3b740 <line:25:9, col:27> 'int' '='
    |     |-DeclRefExpr 0x400000d3b690 <col:9> 'int' lvalue Var 0x400000d3af30 'result' 'int'
    |     `-BinaryOperator 0x400000d3b720 <col:18, col:27> 'int' '+'
    |       |-ImplicitCastExpr 0x400000d3b6f0 <col:18> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x400000d3b6b0 <col:18> 'int' lvalue Var 0x400000d3af30 'result' 'int'
    |       `-ImplicitCastExpr 0x400000d3b708 <col:27> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x400000d3b6d0 <col:27> 'int' lvalue Var 0x400000d3ae00 'i' 'int'
    `-ReturnStmt 0x400000d3b7e8 <line:28:5, col:12>
      `-ImplicitCastExpr 0x400000d3b7d0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x400000d3b7b0 <col:12> 'int' lvalue Var 0x400000d3af30 'result' 'int'
